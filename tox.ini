[tox]
envlist = quality,py311-{redwood,sumac}

[doc8]
; D001 = Line too long
ignore = D001

[pycodestyle]
exclude = .git,.tox,migrations
max-line-length = 120

[pydocstyle]
; D101 = Missing docstring in public class
; D200 = One-line docstring should fit on one line with quotes
; D203 = 1 blank line required before class docstring
; D212 = Multi-line docstring summary should start at the first line
; D215 = Section underline is over-indented (numpy style)
; D404 = First word of the docstring should not be This (numpy style)
; D405 = Section name should be properly capitalized (numpy style)
; D406 = Section name should end with a newline (numpy style)
; D407 = Missing dashed underline after section (numpy style)
; D408 = Section underline should be in the line following the section's name (numpy style)
; D409 = Section underline should match the length of its name (numpy style)
; D410 = Missing blank line after section (numpy style)
; D411 = Missing blank line before section (numpy style)
; D412 = No blank lines allowed between a section header and its content (numpy style)
; D413 = Missing blank line after last section (numpy style)
; D414 = Section has no content (numpy style)
ignore = D101,D200,D203,D212,D215,D404,D405,D406,D407,D408,D409,D410,D411,D412,D413,D414
match-dir = (?!migrations)

[pytest]
addopts = --cov futurex_openedx_extensions --cov tests --cov-report term-missing --cov-report xml --cov-fail-under=100
norecursedirs = .* docs requirements site-packages

[testenv]
skip_install = true
allowlist_externals =
    rm
setenv =
    redwood: DJANGO_SETTINGS_MODULE = test_settings_redwood
    redwood: PYTEST_COV_CONFIG = {toxinidir}/.coveragerc-redwood
    sumac: DJANGO_SETTINGS_MODULE = test_settings_sumac
    sumac: PYTEST_COV_CONFIG = {toxinidir}/.coveragerc-sumac
    redwood: PYTHONPATH = {toxinidir}/test_utils/edx_platform_mocks_shared:{toxinidir}/test_utils/edx_platform_mocks_redwood:{env:PYTHONPATH:}
    sumac: PYTHONPATH = {toxinidir}/test_utils/edx_platform_mocks_shared:{toxinidir}/test_utils/edx_platform_mocks_sumac:{env:PYTHONPATH:}
    PYTHONPATH = {toxinidir}/test_utils/edx_platform_mocks_shared:{env:PYTHONPATH:}
deps =
    redwood: -c{toxinidir}/requirements/test-constraints-redwood.txt
    sumac: -c{toxinidir}/requirements/test-constraints-sumac.txt
    -r{toxinidir}/requirements/test.in
    -e{toxinidir}/test_utils/edx_platform_mocks_shared
    redwood: -e{toxinidir}/test_utils/edx_platform_mocks_redwood
    sumac: -e{toxinidir}/test_utils/edx_platform_mocks_sumac
commands =
    rm -Rf {toxinidir}/test_utils/edx_platform_mocks_shared/fake_models/migrations
    rm -Rf {toxinidir}/test_utils/edx_platform_mocks_redwood/fake_models/migrations
    rm -Rf {toxinidir}/test_utils/edx_platform_mocks_sumac/fake_models/migrations
    python manage.py makemigrations fake_models
    python manage.py check
    pytest {posargs} --cov-config={env:PYTEST_COV_CONFIG}

[testenv:docs]
setenv =
    redwood: DJANGO_SETTINGS_MODULE = test_settings_redwood
    sumac: DJANGO_SETTINGS_MODULE = test_settings_sumac
    PYTHONPATH = {toxinidir}
    # Adding the option here instead of as a default in the docs Makefile because that Makefile is generated by shpinx.
    SPHINXOPTS = -W
allowlist_externals =
    make
    rm
deps =
    -r{toxinidir}/requirements/doc.in
commands =
    doc8 --ignore-path docs/_build README.rst docs
    rm -f docs/futurex_openedx_extensions.rst
    rm -f docs/modules.rst
    make -e -C docs clean
    make -e -C docs html
    python -m build --wheel
    twine check dist/*

[testenv:quality]
basepython = python3.11
deps =
    -c{toxinidir}/requirements/test-constraints-redwood.txt
    -r{toxinidir}/requirements/quality.in
    -e{toxinidir}/test_utils/edx_platform_mocks_shared
commands =
    flake8 futurex_openedx_extensions tests test_utils manage.py
    mypy futurex_openedx_extensions manage.py
    pycodestyle futurex_openedx_extensions tests test_utils manage.py
    pydocstyle futurex_openedx_extensions tests test_utils manage.py

    ; quality check for everything expect upgrade module. using redwood mocks
    ;(note: anything outside upgrade module is shared between all releases)
    pip install -e {toxinidir}/test_utils/edx_platform_mocks_redwood
    pylint futurex_openedx_extensions tests test_utils manage.py --ignore-paths="^futurex_openedx_extensions/upgrade/"
    ; quality check for upgrade module - redwood only
    pylint futurex_openedx_extensions/upgrade --ignore-paths="^futurex_openedx_extensions/upgrade/releases/(?!redwood/).*"
    ; quality check for upgrade module - sumac only
    pip uninstall -y edx_platform_mocks_redwood
    pip install -e {toxinidir}/test_utils/edx_platform_mocks_sumac
    pylint futurex_openedx_extensions/upgrade --ignore-paths="^futurex_openedx_extensions/upgrade/releases/(?!sumac/).*"

    isort --check-only --diff tests test_utils manage.py futurex_openedx_extensions test_settings_redwood.py test_settings_sumac.py

[testenv:pii_check]
setenv =
    DJANGO_SETTINGS_MODULE = test_settings_redwood
deps =
    -r{toxinidir}/requirements/test.in
commands =
    code_annotations django_find_annotations --config_file .pii_annotations.yml --lint --report --coverage
